import dpipe.commands as commands
from dpipe.io import ConsoleArguments, load_json
from dpipe.experiment.flat.base import flat
from dpipe.train.base import train as train_base
from dpipe.train.logging import TBLogger
from dpipe.train.validator import validate

console = ConsoleArguments()

train_ids = load_json('train_ids.json')
val_ids = load_json('val_ids.json')
test_ids = load_json('test_ids.json')

save_model_path = 'model'
restore_model_path = save_model_path

makefile = None
build_experiment = flat(
    makefile=makefile,
    config_path=console.config_path,
    experiment_path=console.experiment_path,
    split=split
)

train = train_base(
    # lazy
    do_train_step=model.do_train_step,
    batch_iter=batch_iter,
    n_epochs=n_epochs,
    logger=logger,
    lr_policy=lr_policy,
    validate=validate_step
)

train_model = commands.train_model(
    # lazy
    train=train,
    model=model,
)

log_path = 'train_logs'
val_metrics = None
logger = TBLogger(log_path=log_path)

validate_step = validate(
    # lazy
    load_x=load_x,
    load_y=load_y,
    ids=val_ids,
    metrics=val_metrics,
    validate_fn=validate_fn
)

predict = commands.predict(
    # lazy
    load_x=load_x,
    predict_fn=predict_fn,
)
