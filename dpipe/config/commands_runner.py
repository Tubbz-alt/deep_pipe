import os
import shutil
from typing import Callable


def if_missing(func: Callable, *paths: str, **keyword_paths: str):
    outputs = paths + tuple(keyword_paths.values())
    if not outputs:
        raise ValueError('At least one path must be provided either via positional or keyword arguments.')

    if all(map(os.path.exists, outputs)):
        print(f'>>> Nothing to be done, all outputs already exist: {", ".join(outputs)}\n', flush=True)
        return

    print(f'>>> Running command to generate outputs: {", ".join(outputs)}\n', flush=True)

    try:
        # TODO: add lock?
        func(*paths, **keyword_paths)
    except BaseException as e:
        list(map(shutil.rmtree, filter(os.path.exists, outputs)))
        raise RuntimeError('An exception occurred. Cleaning up...\n') from e

    missing = [path for path in outputs if not os.path.exists(path)]
    if missing:
        raise FileNotFoundError(f'The following outputs were not generated by the given function: {", ".join(missing)}')
